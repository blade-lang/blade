/**
 * make_blade.b
 * 
 * This script helps us to generate a single header file for 
 * Blade out of the multiple core Blade header files in the project. 
 * 
 * The generated file can be imported by library authors to compile 
 * code that links against libblade.
 * 
 * @note This script MUST be run from CMakeLists.txt.
 * 
 * @copyright Richard Ore
 */

import os
import date { Date }

if os.args.length() < 2 {
  echo 'Source files root not specified'
  os.exit(1)
}

var root = os.args[2]

# create IMPORTANT directories
if !os.dir_exists('blade/includes')
  os.create_dir('blade/includes')
if !os.dir_exists('blade/dist')
  os.create_dir('blade/dist')


var output_file = 'blade/includes/blade.h'

var header_list = [
  'common',
  'blob',
  'debug',
  'value',
  'table',  
  'object', 
  'vm',
  'memory',
  'native',
  'module'
]

var processed = []  # files processed
var processed_content = []  # the processed content

for f in header_list {
  if !processed.contains('${f}.h') {
    var g = file('${root}/src/${f}.h').read()

    # exclude nested, object and compart include
    var regex = '/#include\s*"((${'|'.join(header_list)})\.h)"/'

    if g.match(regex) {
      var headers = g.matches(regex)[1]
      
      for head in headers {
        if !processed.contains(head) {
          var h = file('${root}/src/${head}')
          if !h.exists() raise Exception('missing header file ${head}')

          g = g.replace('/#include\s*"${head}"/', h.read())
          processed.append(head)
        }
      }
    }

    processed.append('${f}.h')
    
    # remove all non-involved headers
    g = g.replace('/#include\s*"[^"]+"\n/', '')

    # remove all native method declarations
    g = g.replace('/DECLARE_NATIVE\([^)]+\);?\n\n?/', '')
    processed_content.append(g)
  }
}

var license = file('${root}/LICENSE').read().
    replace('/\\n/', '\n * ')
license = '/**\n * ${license}\n */\n'

var output = '/**
 * This file was autogenerated by make_blade.b and should 
 * NOT be manually modified as any manual modification will be 
 * lost whenever the script is run. This file is meant to be 
 * part of the final Blade distribution as a single header file 
 * that allow developers link against libblade when writing 
 * libraries based on the C API.
 */

// Generated at ${Date().format('c')}

${license}

${file('include-gen/config.h').read()}

${'\n\n'.join(processed_content)}

${file('export.h').read()}
'

file(output_file, 'w').write(output)
echo 'Compilation successful!'

