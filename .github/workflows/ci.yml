name: CI

on:
  push:
    branches-ignore:
      - main
  pull_request:
    branches: [ main ]

jobs:

  build-linux:
    runs-on: ubuntu-24.04
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v4
      - name: Setup cmake
        uses: lukka/get-cmake@v3.25.2
        with:
          useLocalCache: true
          useCloudCache: false
      - name: Compile
        run: |
          sudo apt-get update
          sudo apt-get remove libgd3 
          sudo apt-get install curl libpthread-stubs0-dev libcurl4-openssl-dev libgd-dev libavif-dev libffi-dev -y
          cmake -B .
          cmake --build . -- -j 12
          chmod +x blade/blade
      - name: Test
        run: ctest
      - name: Generate Artifacts
        if: '!cancelled()'
        uses: actions/upload-artifact@v4
        with:
          name: blade-linux-${{ github.run_id }}
          path: ${{github.workspace}}/blade
  
  build-linux-arm:
    runs-on: ubuntu-24.04-arm
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v4
      - name: Setup cmake
        uses: lukka/get-cmake@v3.25.2
        with:
          useLocalCache: true
          useCloudCache: false
      - name: Compile
        run: |
          sudo apt-get update
          sudo apt-get remove libgd3 
          sudo apt-get install curl libpthread-stubs0-dev libcurl4-openssl-dev libgd-dev libavif-dev libffi-dev -y
          cmake -B .
          cmake --build . -- -j 12
          chmod +x blade/blade
      - name: Test
        run: ctest
      - name: Generate Artifacts
        if: '!cancelled()'
        uses: actions/upload-artifact@v4
        with:
          name: blade-linux-arm-${{ github.run_id }}
          path: ${{github.workspace}}/blade

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Setup cmake
        uses: lukka/get-cmake@v3.25.2
        with:
          useLocalCache: true
          useCloudCache: false
      - uses: actions/checkout@v4
      - name: Setup dependencies
        run: |
          brew uninstall pkg-config --ignore-dependencies
          brew install pkg-config gd libffi
      - name: Compile
        run: |
          cmake -B . -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl
          cmake --build . -- -j 12
          chmod 755 blade/blade
      - name: Test
        run: ctest
      - name: Generate Artifacts
        if: '!cancelled()'
        uses: actions/upload-artifact@v4
        with:
          name: blade-macos-${{ github.run_id }}
          path: ${{github.workspace}}/blade

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Setup cmake
        uses: lukka/get-cmake@latest
        with:
          cmakeVersion: '3.28.x'
          useLocalCache: true
          useCloudCache: false
      - name: Setup WinLibs
        uses: bwoodsend/setup-winlibs-action@v1.8
        with:
          add_to_path: true
          tag: 14.2.0posix-18.1.8-12.0.0-msvcrt-r1
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install dependencies
        uses: johnwason/vcpkg-action@v6
        with:
          pkgs: pkgconf curl libffi openssl libgd
          revision: master
          triplet: x64-windows-static-release
          token: ${{ github.token }}
          github-binarycache: true
      - name: Compile
        run: |
          cmake -B . -G "Unix Makefiles" -DVCPKG_TARGET_TRIPLET=x64-windows-static-release -DCMAKE_MAKE_PROGRAM=mingw32-make -DCMAKE_TOOLCHAIN_FILE="${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake"
          cmake --build . -- -j 12
      - name: Test
        run: ctest
      - name: Generate Artifacts
        if: '!cancelled()'
        uses: actions/upload-artifact@v4
        with:
          name: blade-windows-default-${{ github.run_id }}
          path: ${{github.workspace}}/blade
